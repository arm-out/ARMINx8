set     0           // i = 0
movo    r0  r15     // r15 = i

LOOP_BEGIN
set     0
movo    r0  r14
movo    r0  r13
movo    r0  r3
movo    r0  r4
movo    r0  r5
movo    r0  r6
set     30
movi    r0  r1
movi    r15 r0
add     r0
lwr     r2          // r2 = LSW
inc     r0
lwr     r3          // r3 = MSW

// FIND P's
set     1           // 00000001 p8 mask
movi    r0  r1      
movi    r3  r0
and     r0
lsl     r0
lsl     r0
lsl     r0
lsl     r0
movo    r0  r4      // r4 = 0 0 0 p8 0 0 0 0

set     16
movi    r0  r1
movi    r2  r0
and     r5
set     1
movi    r0  r1
movi    r5  r0
lsr     r0
movi    r4  r1
or      r4          // r4 = 0 0 0 p8 p4 0 0 0

set     4
movi    r0  r1
movi    r2  r0
and     r0
movi    r4  r1
or      r4          // r4 = 0 0 0 p8 p4 p2 0 0

set     2
movi    r0  r1
movi    r2  r0
and     r0
movi    r4  r1
or      r4          // r4 = 0 0 0 p8 p4 p2 p1 0

set     1
movi    r2  r1
and     r0
movi    r4  r1
or      r4          // r4 = 0 0 0 p8 p4 p2 p1 p0

set     1
movi    r0  r1
movi    r3  r0
lsr     r0
rxor    r0
lsl     r0
lsl     r0
lsl     r0
lsl     r5          // r5 = 0 0 0 q8 0 0 0 0

set     4
movi    r0  r1
movi    r2  r0
lsr     r6          // r6 = 0 0 0 0 b4 b3 b2 p4
movi    r3  r0
lsr     r0
lsl     r0
movi    r6  r1
or      r6          // r6 = b11 b10 b9 b8 b4 b3 b2 p4
set     1
movi    r0  r1
movi    r6  r0
lsr     r0
rxor    r0
lsl     r0
lsl     r0
lsl     r0
movi    r5  r1
or      r5          // r5 = 0 0 0 q8 q4 0 0 0

set     3
movi    r0  r1
set     25
lsl     r1
set     4
or      r0          // MSB mask 11001100
movi    r3  r1
and     r0
rxor    r6          // r6 = ^(b11 b10 b7 b6)
set     3
movi    r0  r1
movi    r2  r0
lsr     r1
set     25  
and     r0
rxor    r0
movi    r6  r1
xor     r6          // r6 = q2
set     2
movi    r0  r1
movi    r6  r0
lsl     r0
movi    r5  r1
or      r5          // r5 = 0 0 0 q8 q4 q2 0 0
set     29
movo    r0  r6

set     3
movi    r0  r1
set     21
lsl     r1
set     2
or      r0
movi    r3  r1
and     r6          // r6 = b11 b10 b9 0 b7 0 b5 0
set     3
movi    r0  r1
set     21
lsl     r0
movi    r2  r1
and     r7          // r7 = b4 0 b2 0 b1 0 0 0
movi    r7  r0
rxor    r1
movi    r6  r0
rxor    r0
xor     r6          // r6 = q1
set     1
movi    r0  r1
movi    r6  r0
lsl     r0
movi    r5  r1
or      r5          // r5 = 0 0 0 q8 q4 q2 q1 0

movi    r3  r0
rxor    r6          // r6 = ^(MSB)
set     1
movi    r0  r1
movi    r2  r0
lsr     r0
rxor    r0
movi    r6  r1
xor     r0
movi    r5  r1
or      r5          // r5 = 0 0 0 q8 q4 q2 q1 q0

// SYNDROME CALCULATION
movi    r4  r0
movi    r5  r1
xor     r6
beq     NO_ERROR    // S = 0000 no error

set     1           // 0 0 0 0 1
movi    r6  r1      
and     r1          // 0 0 0 0 q1
beq     1_ERROR     // p0 and q0 do not match: 1 bit error

// 2 BIT ERROR
set     7
movi    r0  r1
set     1
lsl     r14         // 10000000 = MSB
set     0
movi    r0  r13         // 00000000 = LSB
movi    r0  r1
set     0
beq     SAVE_DATA   // send data

1_ERROR
set     1
movi    r0  r1
movi    r6  r0
lsr     r1
set     8
bgt     LSB_ERROR       if (index < 8): ERROR IN LSB
movo    r1  r7
movi    r0  r1
movi    r7  r0
sub     r1              // r1 = MSB index
set     1
lsl     r0              // flip mask
movi    r3  r1
xor     r3              // r3 = CORRECTED MSB
set     0
movi    r0  r1
set     0
beq     SAVE_DATA_CORRECT


LSB_ERROR
set     1
lsl     r0              // move bit to flip position
movi    r2  r1
xor     r2              // r2 = CORRECTED LSB

SAVE_DATA_CORRECT
set     6
movi    r0  r1
set     1
lsl     r14          // r14 = 0 1 0 0 0 0 0 0

NO_ERROR
set     5
movi    r0  r1
movi    r3  r0
lsr     r0          // r0 = 0 0 0 0 0 b11 b10 b9 = MSB
movi    r14 r1
or      r14         // r0 = F F 0 0 0 b11 b10 b9 = MSB

SAVE_DATA
set     8
movi    r2  r1
and     r7          // r7 = 0 0 0 0 b1 0 0 0
set     3
movi    r0  r1
movi    r7  r0
lsr     r7          // r7 = 0 0 0 0 0 0 0 b1
set     1
movi    r0  r1
movi    r2  r0
lsr     r0
lsr     r0
lsr     r0
lsr     r0
lsr     r0
lsl     r0
movi    r7  r1
or      r7          // r7 = 0 0 0 0 b4 b3 b2 b1
set     30
movi    r3  r1
and     r8          // r8 = 0 0 0 b8 b7 b6 b5 0
set     3
movi    r0  r1
movi    r8  r0
lsl     r0
movi    r7  r1
or      r13         // b8 b7 b6 b5 b4 b3 b2 b1

movi    r15 r0
swr     r13
inc     r0
swr     r14

inc     r15
inc     r15
set     30
movi    r15 r1
bneq    LOOP_BEGIN

halt                // done